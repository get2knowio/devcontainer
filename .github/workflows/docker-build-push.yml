name: Build, Test and Publish DevContainer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/get2knowio/devcontainer

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install DevContainer CLI
        run: npm install -g @devcontainers/cli

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build DevContainer for testing (current platform only)
        run: |
          IMAGE_TAG="${{ env.IMAGE_NAME }}:ci-${{ github.sha }}"
          devcontainer build \
            --workspace-folder containers/default \
            --image-name "$IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Test image via DevContainer CLI (strict)
        if: github.actor != 'nektos/act'
        env:
          STRICT_DEVCONTAINER: "true"
          DEVCONTAINER_TESTS: "true"
        run: |
          IMAGE_TAG="${{ env.IMAGE_NAME }}:ci-${{ github.sha }}"
          echo "Testing image (devcontainer strict mode): $IMAGE_TAG"
          export IMAGE="$IMAGE_TAG"
          set -e
          scripts/test.sh || { echo 'Devcontainer strict tests failed'; exit 1; }

      - name: Test image (act fallback - docker mode)
        if: github.actor == 'nektos/act'
        env:
            FORCE_DOCKER_TESTS: "true"
            DEVCONTAINER_TESTS: "false"
        run: |
          IMAGE_TAG="${{ env.IMAGE_NAME }}:ci-${{ github.sha }}"
          echo "Testing image in act fallback (docker mode): $IMAGE_TAG"
          export IMAGE="$IMAGE_TAG"
          set -e
          scripts/test.sh

      - name: Log in to Container Registry
        if: github.ref == 'refs/heads/main' && github.actor != 'nektos/act'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch DevContainer
        if: github.ref == 'refs/heads/main' && github.actor != 'nektos/act'
        run: |
          IMAGE_TAG="${{ env.IMAGE_NAME }}:ci-${{ github.sha }}"
          # Remove the single-platform image to avoid conflicts
          docker rmi "$IMAGE_TAG" || true
          
          # Build multi-platform image and push directly to registry
          devcontainer build \
            --workspace-folder containers/default \
            --image-name "$IMAGE_TAG" \
            --platform linux/amd64,linux/arm64 \
            --push
          
          # Create and push latest tag manifest from the multi-platform image
          docker buildx imagetools create -t "${{ env.IMAGE_NAME }}:latest" "$IMAGE_TAG"
