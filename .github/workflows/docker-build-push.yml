name: Build, Test and Publish Unified DevContainer (multi-arch)

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      IMAGE_REPO: get2knowio/devcontainer
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/get2knowio/devcontainer
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Convert tags to comma-separated format
        id: tags
        run: |
          # Convert multi-line tags to comma-separated format
          TAGS=$(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ',' | sed 's/,$//')
          echo "comma_separated_tags=$TAGS" >> "$GITHUB_OUTPUT"
          echo "Tags: $TAGS"

      - name: Build and run DevContainer
        uses: devcontainers/ci@v0.3
        with:
          configFile: containers/base/.devcontainer/devcontainer.json
          imageName: ${{ env.REGISTRY }}/get2knowio/devcontainer
          cacheFrom: ${{ env.REGISTRY }}/get2knowio/devcontainer
          platform: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && 'always' || 'never' }}
          imageTag: ${{ steps.tags.outputs.comma_separated_tags }}
          runCmd: |
            echo "=== DevContainer Build Complete ==="
            echo "Running tests..."
            ./test
            echo "=== Tests Complete ==="
