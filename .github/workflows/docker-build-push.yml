name: Build and Push DevContainer Images

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant:
          - name: python
            dockerfile: containers/python/Dockerfile
            image_name: get2knowio/devcontainer-python-base
          - name: typescript
            dockerfile: containers/typescript/Dockerfile
            image_name: get2knowio/devcontainer-typescript-base
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.variant.image_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Configure build cache
        id: cache
        uses: int128/docker-build-cache-config-action@v1
        with:
          image: ${{ env.REGISTRY }}/${{ matrix.variant.image_name }}/cache
          pull-request-cache: true

      - name: Build and push multi-platform image (temp tag)
        if: github.event_name != 'pull_request'
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.variant.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ matrix.variant.image_name }}:test-${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ${{ steps.cache.outputs.cache-from }}
          cache-to: ${{ steps.cache.outputs.cache-to }}

      - name: Pull and test amd64 image
        if: github.event_name != 'pull_request'
        run: |
          # Pull the amd64 version of the image we just pushed
          docker pull --platform linux/amd64 ${{ env.REGISTRY }}/${{ matrix.variant.image_name }}:test-${{ github.sha }}
          
          # Run tests
          chmod +x ./scripts/test.sh
          ./scripts/test.sh ${{ env.REGISTRY }}/${{ matrix.variant.image_name }}:test-${{ github.sha }}

      - name: Tag and push final image
        if: github.event_name != 'pull_request'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get all the final tags we want
          TAGS="${{ steps.meta.outputs.tags }}"
          
          # Tag the tested image with all final tags
          for tag in $TAGS; do
            docker buildx imagetools create \
              --tag $tag \
              ${{ env.REGISTRY }}/${{ matrix.variant.image_name }}:test-${{ github.sha }}
          done
          
          echo "âœ… Successfully tagged and pushed final image with all tags"

      - name: Build for pull request (test only)
        if: github.event_name == 'pull_request'
        id: build-pr
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.variant.dockerfile }}
          platforms: linux/amd64
          load: true
          push: false
          tags: ${{ env.REGISTRY }}/${{ matrix.variant.image_name }}:pr-test
          cache-from: ${{ steps.cache.outputs.cache-from }}

      - name: Test pull request image
        if: github.event_name == 'pull_request'
        run: |
          chmod +x ./scripts/test.sh
          ./scripts/test.sh ${{ env.REGISTRY }}/${{ matrix.variant.image_name }}:pr-test

      - name: Generate artifact attestation
        if: github.event_name != 'pull_request'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ matrix.variant.image_name }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
